# Package configuration file for trlc-platform
# This file is used by find_package() to locate and configure the library

@PACKAGE_INIT@

# Include guard
if(TARGET trlc::platform)
    return()
endif()

# Provide compatibility with different CMake versions
if(CMAKE_VERSION VERSION_LESS "3.16")
    message(FATAL_ERROR "trlc-platform requires CMake 3.16 or later")
endif()

# Set up import targets
include("${CMAKE_CURRENT_LIST_DIR}/trlc-platform-targets.cmake")

# Check that the target exists
if(NOT TARGET trlc::platform)
    message(FATAL_ERROR "trlc-platform installation is corrupted")
endif()

# Provide package information variables
set(TRLC_PLATFORM_VERSION "@PROJECT_VERSION@")
set(TRLC_PLATFORM_VERSION_MAJOR "@PROJECT_VERSION_MAJOR@")
set(TRLC_PLATFORM_VERSION_MINOR "@PROJECT_VERSION_MINOR@")
set(TRLC_PLATFORM_VERSION_PATCH "@PROJECT_VERSION_PATCH@")

# Set up component support
set(TRLC_PLATFORM_COMPONENTS
    compiler
    platform
    architecture
    cpp_standard
    features
    macros
    endianness
    typeinfo
    debug
)

# Validate requested components
if(trlc-platform_FIND_COMPONENTS)
    foreach(component ${trlc-platform_FIND_COMPONENTS})
        if(NOT component IN_LIST TRLC_PLATFORM_COMPONENTS)
            if(trlc-platform_FIND_REQUIRED_${component})
                message(FATAL_ERROR "trlc-platform: Unknown required component '${component}'")
            else()
                message(WARNING "trlc-platform: Unknown optional component '${component}'")
            endif()
        endif()
    endforeach()
endif()

# Mark package as found
set(trlc-platform_FOUND TRUE)

# Provide usage information
if(NOT trlc-platform_FIND_QUIETLY)
    message(STATUS "Found trlc-platform: ${TRLC_PLATFORM_VERSION}")
    message(STATUS "  Headers: ${_IMPORT_PREFIX}/include")
    message(STATUS "  CMake modules: ${CMAKE_CURRENT_LIST_DIR}")
endif()

# Backwards compatibility aliases
set(TRLC_PLATFORM_FOUND ${trlc-platform_FOUND})
set(TRLC_PLATFORM_INCLUDE_DIRS "${_IMPORT_PREFIX}/include")
set(TRLC_PLATFORM_LIBRARIES trlc::platform)

# Include optional helper functions
include("${CMAKE_CURRENT_LIST_DIR}/trlc-platform-helpers.cmake" OPTIONAL)

# Final validation
include(CMakeFindDependencyMacro OPTIONAL)
if(COMMAND check_required_components)
    check_required_components(trlc-platform)
endif()
