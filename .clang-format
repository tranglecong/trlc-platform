# Based on Google style with modifications for modern C++20

Language: Cpp
Standard: c++20
BasedOnStyle: Google

# Basic formatting
IndentWidth: 4
TabWidth: 4
UseTab: Never
ColumnLimit: 100

# Line breaks and braces
BreakBeforeBraces: Attach
Cpp11BracedListStyle: true
BreakConstructorInitializers: BeforeColon
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4

# Alignment
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignConsecutiveBitFields: false
AlignConsecutiveMacros: false
AlignOperands: Align
AlignTrailingComments: true
AlignAfterOpenBracket: Align
AlignEscapedNewlines: Left

# Spacing
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 2
SpacesInAngles: Never
SpacesInConditionalStatement: false
SpacesInContainerLiterals: true
SpacesInCStyleCastParentheses: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Line breaking
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All

# Breaking long lines
BinPackArguments: false
BinPackParameters: false
BreakBeforeBinaryOperators: None
BreakBeforeTernaryOperators: true
BreakStringLiterals: true

# Class and namespace formatting
AccessModifierOffset: -4  # Align with class keyword
NamespaceIndentation: None
CompactNamespaces: false
FixNamespaceComments: true

# Template formatting
AlwaysBreakTemplateDeclarations: Yes
BreakBeforeConceptDeclarations: true

# Include sorting and grouping
SortIncludes: CaseSensitive
SortUsingDeclarations: true
IncludeBlocks: Regroup
IncludeCategories:
  # System headers
  - Regex: '^<[a-z_]+>$'
    Priority: 1
  # C++ standard library headers
  - Regex: '^<[a-z_]+\.h>$'
    Priority: 2
  # C++ standard library (new style)
  - Regex: '^<[a-zA-Z0-9_/]+>$'
    Priority: 3
  # Project headers
  - Regex: '^"trlc/'
    Priority: 4
  # Local headers
  - Regex: '^"'
    Priority: 5

# Preprocessor
IndentPPDirectives: BeforeHash
MacroBlockBegin: ''
MacroBlockEnd: ''

# Comments
ReflowComments: true

# Penalties (fine-tuning)
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 200

# Modern C++ specific
InsertBraces: false
RemoveBracesLLVM: false
SeparateDefinitionBlocks: Always

# Pointer and reference alignment
PointerAlignment: Left
ReferenceAlignment: Pointer
DerivePointerAlignment: false

# Qualifiers
QualifierAlignment: Leave

# Short functions
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1

# Experimental features for C++20
RequiresClausePosition: OwnLine
IndentRequires: true
RequiresExpressionIndentation: OuterScope
